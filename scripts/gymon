#!/bin/sh
#
# processname:    gymon.out
# pidfile:        /var/run/gymon.pid
# chkconfig:      5 99 01
# description:    Starts the gymon service

# Source function library.
. /etc/rc.d/init.d/functions

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="gymon"
NAME=gymon
DAEMON=/opt/delphax/gymon/bin/${NAME}.out
DAEMON_ARGS="-p 32001"
DAEMON_USER=root
PIDFILE=/var/run/$NAME.pid
LOGDIR=/var/log/gymon

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Read configuration variable file if it is present
[ -r /etc/sysconfig/gymon/$NAME ] && . /etc/sysconfig/gymon/$NAME

# Creates the logging directory
if [[ ! -d "$LOGDIR" ]]; then
	mkdir -p "$LOGDIR"
	touch "$LOGDIR/gymon.log"
fi

status() {
	if pgrep -x $NAME.out >/dev/null; then
		return 0
	else
		return 1
	fi
}

start() {
        echo -n $"Starting $NAME: "
        daemon --user="$DAEMON_USER" --pidfile="$PIDFILE" "$DAEMON $DAEMON_ARGS"
	sleep 5
        RETVAL=$?
        #pid=`ps -A | grep $NAME | cut -d" " -f2`
        #pid=`echo $pid | cut -d" " -f2`
	pid=$(pgrep -x $NAME.out) 
        if [ -n "$pid" ]; then
                echo $pid > "$PIDFILE"
        fi
        echo
        return $RETVAL
}
stop() {
        echo -n $"Stopping $NAME: "
        killproc -p "$PIDFILE" -d 10 "$DAEMON"
        RETVAL="$?"
        echo
        [ $RETVAL = 0 ] && rm -f "$PIDFILE"
        return "$RETVAL"
}

case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  status)
	if status; then
		echo $NAME service is running
	else
		echo $NAME service is stopped
	fi
	;;
  restart)
        stop
        start
        ;;
  *)
        echo "Usage: $NAME {start|stop|restart|status}" >&2
        exit 1
        ;;
esac

exit $RETVAL
